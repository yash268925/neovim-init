[[plugins]]
repo = 'vim-skk/skkeleton'
on_event = 'InsertEnter'
hook_add = '''
  imap <C-j> <Plug>(skkeleton-toggle)
  cmap <C-j> <Plug>(skkeleton-toggle)
'''
hook_post_source = '''
  call skkeleton#config({
    \ 'eggLikeNewline': v:true,
    \ 'globalJisyo': $HOME . '/.skk/SKK-JISYO.L',
    \ 'immediatelyJisyoRW': v:true,
    \ 'registerConvertResult': v:true,
    \ 'userJisyo': $HOME . '/.skk/userJisyo',
    \ })
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
on_event = 'UIEnter'
depends = ['iceberg.vim', 'vim-devicons', 'lightline-bufferline']
hook_add = '''
  let g:lightline = {
    \ 'colorscheme': 'iceberg',
    \ 'tabline': {
    \   'left': [ [ 'tabs', 'buffers' ] ],
    \   'right': [],
    \ },
    \ 'active': {
    \   'left': [ [ 'mode', 'paste' ],
    \             [ 'readonly', 'filename', 'modified' ],
    \             [ 'gitbranch', 'gittraffic' ] ]
    \ },
    \ 'inactive': {
    \   'left': [ [ 'filename', 'modified' ] ],
    \   'right': []
    \ },
    \ 'component_function': {
    \   'gitbranch': 'gin#component#branch#unicode',
    \   'gittraffic': 'gin#component#traffic#unicode',
    \   'gitfilename': 'gin#component#worktree#full',
    \ },
    \ 'component_expand': {
    \    'buffers': 'lightline#bufferline#buffers'
    \ },
    \ 'component_type': {
    \    'buffers': 'tabsel'
    \ },
    \ 'component': {
    \    'filename': '%n: %t'
    \ }
    \ }
  let g:lightline.tab = {
    \ 'active': [ 'tabnum' ],
    \ 'inactive': [ 'tabnum', 'filename' ] }
  set hidden
  set showtabline=2

  nnoremap <Left> :bprev<CR>
  nnoremap <Right> :bnext<CR>
'''

[[plugins]]
repo = 'mengelbrecht/lightline-bufferline'
hook_add = '''
  let g:lightline#bufferline#show_number=1
  let g:lightline#bufferline#enable_devicons=1
  let g:lightline#bufferline#unicode_symbols=1
  let g:lightline#bufferline#filter_by_tabpage=1
  let g:lightline#bufferline#unnamed='[No Name]'
'''

[[plugins]]
repo = 'jlanzarotta/bufexplorer'
on_cmd = ['BufExplorer']

[[plugins]]
repo = 'mhinz/vim-sayonara'
on_cmd = ['Sayonara']
hook_add = '''
  nnoremap sa :<C-u>Sayonara<CR>
  nnoremap sq :<C-u>Sayonara!<CR>

  let g:sayonara_confirm_quit=1
'''

[[plugins]]
repo = 'cohama/agit.vim'
on_cmd = ['Agit']
hook_add = '''
  autocmd FileType agit call s:agit_keymaps()

  function! s:agit_keymaps()
    nmap <buffer> R <Plug>(agit-reload)
  endfunction
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
on_event = 'BufFilePre'

[[plugins]]
repo = 'rhysd/conflict-marker.vim'
on_event = 'BufFilePre'

[[plugins]]
repo = 'tpope/vim-fugitive'
on_event = 'CmdLineEnter'
hook_add = '''
  autocmd FileType fugitivestatus nmap <buffer> q gq
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_event = 'BufFilePre'

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = ['QuickRun']

[[plugins]]
repo = 'previm/previm'
on_cmd = ['PrevimOpen']
hook_add = '''
  let g:previm_open_cmd = 'mdpreview'
'''
