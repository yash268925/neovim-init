[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'lewis6991/impatient.nvim'
if = 'has("nvim")'
hook_source = '''
  lua require('impatient')
'''

[[plugins]]
repo = 'cocopon/vaffle.vim'
depends = ['vim-devicons']
on_event = 'VimEnter'
hook_add = '''
  let g:vaffle_render_custom_icon = 'VaffleRenderCustomIcon'
  let NERDTreeHijackNetrw = 0

  function! VaffleRenderCustomIcon(item)
    return WebDevIconsGetFileTypeSymbol(a:item.basename, a:item.is_dir)
  endfunction
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = '''
  lua << EOF
  require'nvim-treesitter.configs'.setup {
    ensure_installed = "maintained",
    additional_vim_regex_highlighting = false,
    highlight = {
      enable = true,
      -- disable = { "html", "typescript", "vue" },
    },
    indent = {
      enable = true,
      -- disable = { "html", "typescript", "vue" },
    }
  }
EOF

  set foldexpr=nvim_treesitter#foldexpr()
'''

[[plugins]]
repo = 'nvim-treesitter/playground'
hook_add = '''
  lua << EOF
  require "nvim-treesitter.configs".setup {
    playground = {
      enable = true,
      disable = {},
      updatetime = 25, -- Debounced time for highlighting nodes in the playground from source code
      persist_queries = false, -- Whether the query persists across vim sessions
      keybindings = {
        toggle_query_editor = 'o',
        toggle_hl_groups = 'i',
        toggle_injected_languages = 't',
        toggle_anonymous_nodes = 'a',
        toggle_language_display = 'I',
        focus_language = 'f',
        unfocus_language = 'F',
        update = 'R',
        goto_node = '<cr>',
        show_help = '?',
      },
    }
  }
EOF
'''


[[plugins]]
repo = 'cocopon/pgmnt.vim'
